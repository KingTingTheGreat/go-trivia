package templates

templ Control() {
    <main style="display:flex; flex-direction:column; align-items:center">
        <h1>Control Panel</h1>

        <h4>Password</h4>
        <input style="padding:0.25rem; margin:0.25rem;" type="password" placeholder="Password" id="password" />

        <h4 style="padding:0.5rem; margin:0.25rem;">Question #<span id="qnum"></span></h4>

        <div style="display:flex;" id="control-box">
            <div style="display:flex; flex-direction:column; margin:0.5rem; padding:0.75rem;">
                <h4>Update User Score</h4>
                <select name="players" id="players">
                </select>
                <input type="number" id="amount" placeholder="Amount" value="0" />
                <button onclick="updatePlayers()">Refresh Players</button>
                <button onclick="updateUserScore()">Update Score</button>
            </div>
            <div style="display:flex; flex-direction:column; margin:0.5rem; padding:0.75rem;">
                <h4>Question Controls</h4>
                <div style="display:flex; width:100%;">
                    <button style="cursor:pointer; flex:1; margin:0.5rem; padding:0.5rem; width:fit; background-color:pink" onclick="prev()">Prev</button>
                    <button style="cursor:pointer; flex:1; margin:0.5rem; padding:0.5rem; width:fit; background-color:lightgreen" onclick="next()">Next</button>
                </div>
                <button style="cursor:pointer; flex:1; margin:0.5rem; padding:0.5rem; width:fit; background-color:lightgray" onclick="clearTimes()">Clear</button>
            </div>
        </div>
        @Leaderboard()
    </main>
    <script>
        fetch('/question-number').then(response => response.text()).then(data => {
            questionNum = Number(data);
            if (!isNaN(questionNum)) {
                document.getElementById('qnum').innerText = questionNum;
            }
        });
        function updatePlayers() {
            fetch('/players').then(response => response.json()).then(data => {
                const players = data;
                const select = document.getElementById('players');
                select.replaceChildren();
                for (let i = 0; i < players.length; i++) {
                    const option = document.createElement('option');
                    option.value = players[i];
                    option.innerText = players[i];
                    select.appendChild(option);
                }
            });
        }
        updatePlayers();
        function updateUserScore() {
            const password = document.getElementById('password').value;
            const name = document.getElementById('name').value;
            document.getElementById('name').value = '';
            const amount = document.getElementById('amount').value;
            document.getElementById('amount').value = 0;
            fetch('/update-score', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    name: name,
                    amount: amount,
                    password: password
                })
            }).then(response => response.text()).then(data => {console.log(data)});
        }
        function clearTimes() {
            fetch('/clear', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    password: document.getElementById('password').value
                })
            }).then(response => response.text()).then(data => {console.log(data)});
        }
        function next() {
            fetch('/next', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    password: document.getElementById('password').value
                })
            }).then(response => response.text()).then(data => {
                questionNum = Number(data);
                console.log(data)
                if (!isNaN(questionNum)) {
                    document.getElementById('qnum').innerText = questionNum;
                }
            });
        }
        function prev() {
            fetch('/prev', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    password: document.getElementById('password').value
                })
            }).then(response => response.text()).then(data => {
                questionNum = Number(data);
                console.log(data)
                if (!isNaN(questionNum)) {
                    document.getElementById('qnum').innerText = questionNum;
                }
            });
        }
    </script>
}